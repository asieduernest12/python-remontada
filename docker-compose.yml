services:
  flask:
    build:
      context: ./backend/flask
      dockerfile: Dockerfile
    volumes:
      - ./backend/flask:/app
    restart: unless-stopped
    command: pipenv run flask run --host=0.0.0.0 --port=80 --debug
    develop:
      watch:
        - action: rebuild
          path: ./backend/flask/Pipfile
          target: /app/Pipfile
    mem_limit: 100mb

  django:
    build:
      context: ./backend/django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/django:/app
    restart: unless-stopped
    mem_limit: 500mb
    develop:
      watch:
        - action: rebuild
          path: ./backend/django/requirements.txt
          target: /app/requirements.txt

  # db:
  #   image: postgres:13
  #   container_name: postgres
  #   environment:
  #     POSTGRES_DB: mydatabase
  #     POSTGRES_USER: myuser
  #     POSTGRES_PASSWORD: mypassword
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  fastapi:
    build:
      context: ./backend/fastapi
      dockerfile: Dockerfile
    volumes:
      - ./backend/fastapi:/app
      - ./backend/fastapi/db:/app/db
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    develop:
      watch:
        - action: rebuild
          path: ./backend/fastapi/requirements.txt
          target: /app/requirements.txt
    mem_limit: 500mb

  client:
    image: node:22-alpine
    volumes:
      - ./client:/app
    working_dir: /app
    restart: unless-stopped
    command: sh -c "npm install && npm start -- --host=0.0.0.0"
    mem_limit: 200mb

 

  caddy:
    image: caddy:latest
    ports:
      - '80:80'
      - '443:443'
      - '443:443/udp'
    environment:
      - CADDY_AUTO_RELOAD=1
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy_data:/data
      - ./caddy_config:/config
    depends_on:
      - fastapi
      - flask
      - client
      - django
    mem_limit: 200mb
    cpu_percent: 10
    restart: unless-stopped
    # develop:
    #   watch:
    #     - path: ./Caddyfile
    #       target: /etc/caddy/Caddyfile
    #       action: sync+restart

# volumes:
#   postgres_data:
