services:
  flask:
    build:
      context: ./backend/flask
      dockerfile: Dockerfile
    volumes:
      - ./backend/flask:/app
    restart: unless-stopped
    command: pipenv run flask run --host=0.0.0.0 --port=80 --debug
    develop:
      watch:
        - action: rebuild
          path: ./backend/flask/Pipfile
          target: /app/Pipfile

  django:
    image: django:latest
    volumes:
      - ./django_app:/app
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000

  fastapi:
    build:
      context: ./backend/fastapi
      dockerfile: Dockerfile
    ports:
      - '8001:80'
    volumes:
      - ./backend/fastapi:/app
      - ./backend/fastapi/db:/app/db
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload
    develop:
      watch:
        - action: rebuild
          path: ./backend/fastapi/requirements.txt
          target: /app/requirements.txt

  client:
    image: node:22-alpine
    volumes:
      - ./client:/app
    working_dir: /app
    restart: unless-stopped
    command: sh -c "npm install && npm start -- --host=0.0.0.0"
 

  caddy:
    image: caddy:latest
    ports:
      - '80:80'
      - '443:443'
      - '443:443/udp'
    environment:
      - CADDY_AUTO_RELOAD=1
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy_data:/data
      - ./caddy_config:/config
    depends_on:
      - fastapi
      - flask
      - client
      # - django_app
    # develop:
    #   watch:
    #     - path: ./Caddyfile
    #       target: /etc/caddy/Caddyfile
    #       action: sync+restart

networks:
  default:
    driver: bridge
